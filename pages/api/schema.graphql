### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayLoad {
  code: Int
  token: String
  user: User
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input CircleCreateManyWithoutUserInput {
  connect: [CircleWhereUniqueInput!]
  connectOrCreate: [CircleCreateOrConnectWithoutUserInput!]
  create: [CircleCreateWithoutUserInput!]
}

input CircleCreateOrConnectWithoutUserInput {
  create: CircleCreateWithoutUserInput!
  where: CircleWhereUniqueInput!
}

input CircleCreateWithoutUserInput {
  memberCount: Int!
  picUrl: String!
  title: String!
}

input CircleScalarWhereInput {
  AND: [CircleScalarWhereInput!]
  NOT: [CircleScalarWhereInput!]
  OR: [CircleScalarWhereInput!]
  id: IntFilter
  memberCount: IntFilter
  picUrl: StringFilter
  title: StringFilter
  userId: IntNullableFilter
}

input CircleUpdateManyMutationInput {
  memberCount: IntFieldUpdateOperationsInput
  picUrl: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CircleUpdateManyWithWhereWithoutUserInput {
  data: CircleUpdateManyMutationInput!
  where: CircleScalarWhereInput!
}

input CircleUpdateManyWithoutUserInput {
  connect: [CircleWhereUniqueInput!]
  connectOrCreate: [CircleCreateOrConnectWithoutUserInput!]
  create: [CircleCreateWithoutUserInput!]
  delete: [CircleWhereUniqueInput!]
  deleteMany: [CircleScalarWhereInput!]
  disconnect: [CircleWhereUniqueInput!]
  set: [CircleWhereUniqueInput!]
  update: [CircleUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CircleUpdateManyWithWhereWithoutUserInput!]
  upsert: [CircleUpsertWithWhereUniqueWithoutUserInput!]
}

input CircleUpdateWithWhereUniqueWithoutUserInput {
  data: CircleUpdateWithoutUserInput!
  where: CircleWhereUniqueInput!
}

input CircleUpdateWithoutUserInput {
  memberCount: IntFieldUpdateOperationsInput
  picUrl: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CircleUpsertWithWhereUniqueWithoutUserInput {
  create: CircleCreateWithoutUserInput!
  update: CircleUpdateWithoutUserInput!
  where: CircleWhereUniqueInput!
}

input CircleWhereUniqueInput {
  id: Int
}

type Comment {
  id: Int
  interact: Interact
  postId: Int
  text: String
  toUid: Int
  toUser: User
  user: User
  userId: Int
}

input CommentCreateInput {
  Post: PostCreateOneWithoutCommentsInput
  createdAt: DateTime
  interact: InteractCreateOneWithoutCommentInput
  text: String!
  toUid: Int
  user: UserCreateOneWithoutCommentInput
}

input CommentCreateManyWithoutInteractInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutinteractInput!]
  create: [CommentCreateWithoutInteractInput!]
}

input CommentCreateManyWithoutPostInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutPostInput!]
  create: [CommentCreateWithoutPostInput!]
}

input CommentCreateManyWithoutUserInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutuserInput!]
  create: [CommentCreateWithoutUserInput!]
}

input CommentCreateOrConnectWithoutPostInput {
  create: CommentCreateWithoutPostInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutinteractInput {
  create: CommentCreateWithoutInteractInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutuserInput {
  create: CommentCreateWithoutUserInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateWithoutInteractInput {
  Post: PostCreateOneWithoutCommentsInput
  createdAt: DateTime
  text: String!
  toUid: Int
  user: UserCreateOneWithoutCommentInput
}

input CommentCreateWithoutPostInput {
  createdAt: DateTime
  interact: InteractCreateOneWithoutCommentInput
  text: String!
  toUid: Int
  user: UserCreateOneWithoutCommentInput
}

input CommentCreateWithoutUserInput {
  Post: PostCreateOneWithoutCommentsInput
  createdAt: DateTime
  interact: InteractCreateOneWithoutCommentInput
  text: String!
  toUid: Int
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  NOT: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  interactId: IntNullableFilter
  postId: IntNullableFilter
  text: StringFilter
  toUid: IntNullableFilter
  userId: IntNullableFilter
}

input CommentUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  toUid: NullableIntFieldUpdateOperationsInput
}

input CommentUpdateManyWithWhereWithoutInteractInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithWhereWithoutPostInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithWhereWithoutUserInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithoutInteractInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutinteractInput!]
  create: [CommentCreateWithoutInteractInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutInteractInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutInteractInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutInteractInput!]
}

input CommentUpdateManyWithoutPostInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutPostInput!]
  create: [CommentCreateWithoutPostInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutPostInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutPostInput!]
}

input CommentUpdateManyWithoutUserInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutuserInput!]
  create: [CommentCreateWithoutUserInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutUserInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutUserInput!]
}

input CommentUpdateWithWhereUniqueWithoutInteractInput {
  data: CommentUpdateWithoutInteractInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutPostInput {
  data: CommentUpdateWithoutPostInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutUserInput {
  data: CommentUpdateWithoutUserInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithoutInteractInput {
  Post: PostUpdateOneWithoutCommentsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  toUid: NullableIntFieldUpdateOperationsInput
  user: UserUpdateOneWithoutCommentInput
}

input CommentUpdateWithoutPostInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  interact: InteractUpdateOneWithoutCommentInput
  text: StringFieldUpdateOperationsInput
  toUid: NullableIntFieldUpdateOperationsInput
  user: UserUpdateOneWithoutCommentInput
}

input CommentUpdateWithoutUserInput {
  Post: PostUpdateOneWithoutCommentsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  interact: InteractUpdateOneWithoutCommentInput
  text: StringFieldUpdateOperationsInput
  toUid: NullableIntFieldUpdateOperationsInput
}

input CommentUpsertWithWhereUniqueWithoutInteractInput {
  create: CommentCreateWithoutInteractInput!
  update: CommentUpdateWithoutInteractInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutPostInput {
  create: CommentCreateWithoutPostInput!
  update: CommentUpdateWithoutPostInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutUserInput {
  create: CommentCreateWithoutUserInput!
  update: CommentUpdateWithoutUserInput!
  where: CommentWhereUniqueInput!
}

input CommentWhereUniqueInput {
  id: Int
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Interact {
  againstCount: Int
  commentId: Int
  handCount: Int
  hateCount: Int
  id: Int
  interestCount: Int
  postId: Int
  thinkCount: Int
  valueCount: Int
}

"""互动类型，有价值、反对、笔芯、感兴趣、出口伤人、拍一拍"""
enum InteractAction {
  against
  hand
  hate
  interest
  think
  value
}

input InteractCreateOneWithoutCommentInput {
  connect: InteractWhereUniqueInput
  connectOrCreate: InteractCreateOrConnectWithoutCommentInput
  create: InteractCreateWithoutCommentInput
}

input InteractCreateOneWithoutPostInput {
  connect: InteractWhereUniqueInput
  connectOrCreate: InteractCreateOrConnectWithoutPostInput
  create: InteractCreateWithoutPostInput
}

input InteractCreateOrConnectWithoutCommentInput {
  create: InteractCreateWithoutCommentInput!
  where: InteractWhereUniqueInput!
}

input InteractCreateOrConnectWithoutPostInput {
  create: InteractCreateWithoutPostInput!
  where: InteractWhereUniqueInput!
}

input InteractCreateWithoutCommentInput {
  Post: PostCreateManyWithoutInteractInput
  againstCount: Int
  commentId: Int
  handCount: Int
  handUid: String
  hateCount: Int
  hateUid: String
  interestCount: Int
  interestUid: String
  postId: Int
  thinkCount: Int
  thinkUid: String
  valueCount: Int
  valueUid: String
}

input InteractCreateWithoutPostInput {
  Comment: CommentCreateManyWithoutInteractInput
  againstCount: Int
  commentId: Int
  handCount: Int
  handUid: String
  hateCount: Int
  hateUid: String
  interestCount: Int
  interestUid: String
  postId: Int
  thinkCount: Int
  thinkUid: String
  valueCount: Int
  valueUid: String
}

input InteractUpdateOneWithoutCommentInput {
  connect: InteractWhereUniqueInput
  connectOrCreate: InteractCreateOrConnectWithoutCommentInput
  create: InteractCreateWithoutCommentInput
  delete: Boolean
  disconnect: Boolean
  update: InteractUpdateWithoutCommentInput
  upsert: InteractUpsertWithoutCommentInput
}

input InteractUpdateOneWithoutPostInput {
  connect: InteractWhereUniqueInput
  connectOrCreate: InteractCreateOrConnectWithoutPostInput
  create: InteractCreateWithoutPostInput
  delete: Boolean
  disconnect: Boolean
  update: InteractUpdateWithoutPostInput
  upsert: InteractUpsertWithoutPostInput
}

input InteractUpdateWithoutCommentInput {
  Post: PostUpdateManyWithoutInteractInput
  againstCount: NullableIntFieldUpdateOperationsInput
  commentId: NullableIntFieldUpdateOperationsInput
  handCount: NullableIntFieldUpdateOperationsInput
  handUid: NullableStringFieldUpdateOperationsInput
  hateCount: NullableIntFieldUpdateOperationsInput
  hateUid: NullableStringFieldUpdateOperationsInput
  interestCount: NullableIntFieldUpdateOperationsInput
  interestUid: NullableStringFieldUpdateOperationsInput
  postId: NullableIntFieldUpdateOperationsInput
  thinkCount: NullableIntFieldUpdateOperationsInput
  thinkUid: NullableStringFieldUpdateOperationsInput
  valueCount: NullableIntFieldUpdateOperationsInput
  valueUid: NullableStringFieldUpdateOperationsInput
}

input InteractUpdateWithoutPostInput {
  Comment: CommentUpdateManyWithoutInteractInput
  againstCount: NullableIntFieldUpdateOperationsInput
  commentId: NullableIntFieldUpdateOperationsInput
  handCount: NullableIntFieldUpdateOperationsInput
  handUid: NullableStringFieldUpdateOperationsInput
  hateCount: NullableIntFieldUpdateOperationsInput
  hateUid: NullableStringFieldUpdateOperationsInput
  interestCount: NullableIntFieldUpdateOperationsInput
  interestUid: NullableStringFieldUpdateOperationsInput
  postId: NullableIntFieldUpdateOperationsInput
  thinkCount: NullableIntFieldUpdateOperationsInput
  thinkUid: NullableStringFieldUpdateOperationsInput
  valueCount: NullableIntFieldUpdateOperationsInput
  valueUid: NullableStringFieldUpdateOperationsInput
}

input InteractUpsertWithoutCommentInput {
  create: InteractCreateWithoutCommentInput!
  update: InteractUpdateWithoutCommentInput!
}

input InteractUpsertWithoutPostInput {
  create: InteractCreateWithoutPostInput!
  update: InteractUpdateWithoutPostInput!
}

input InteractWhereUniqueInput {
  commentId: Int
  id: Int
  postId: Int
}

type Mutation {
  createNewPost(content: String!): Post
  createNewUser(avatarUrl: String, email: String!, name: String!, password: String!): AuthPayLoad
  createOneComment(data: CommentCreateInput!): Comment!
  createOnePost(data: PostCreateInput!): Post!
  createOneUser(data: UserCreateInput!): User!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  interactCommentMutation(actionType: String!, commentId: Int!, count: Int!): Interact
  interactMutation(actionType: InteractAction, count: Int!, postId: Int!): Interact
  login(email: String!, password: String!, username: String!): AuthPayLoad
  upsertOnePost(create: PostCreateInput!, update: PostUpdateInput!, where: PostWhereUniqueInput!): Post!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type PageInfo {
  endCursor: Int
  hasNextPage: Boolean
}

type Post {
  author: User
  authorId: String
  comments: [Comment]
  commentsTotalCount: Int
  content: String!
  createdAt: Date
  id: Int!
  interact: Interact
  title: String
}

input PostCreateInput {
  author: UserCreateOneWithoutPostsInput
  comments: CommentCreateManyWithoutPostInput
  content: String!
  createdAt: DateTime
  interact: InteractCreateOneWithoutPostInput
  published: Boolean
  title: String
}

input PostCreateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  create: [PostCreateWithoutAuthorInput!]
}

input PostCreateManyWithoutInteractInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutinteractInput!]
  create: [PostCreateWithoutInteractInput!]
}

input PostCreateOneWithoutCommentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutcommentsInput
  create: PostCreateWithoutCommentsInput
}

input PostCreateOrConnectWithoutauthorInput {
  create: PostCreateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutcommentsInput {
  create: PostCreateWithoutCommentsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutinteractInput {
  create: PostCreateWithoutInteractInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutAuthorInput {
  comments: CommentCreateManyWithoutPostInput
  content: String!
  createdAt: DateTime
  interact: InteractCreateOneWithoutPostInput
  published: Boolean
  title: String
}

input PostCreateWithoutCommentsInput {
  author: UserCreateOneWithoutPostsInput
  content: String!
  createdAt: DateTime
  interact: InteractCreateOneWithoutPostInput
  published: Boolean
  title: String
}

input PostCreateWithoutInteractInput {
  author: UserCreateOneWithoutPostsInput
  comments: CommentCreateManyWithoutPostInput
  content: String!
  createdAt: DateTime
  published: Boolean
  title: String
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  authorId: IntNullableFilter
  content: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  interactId: IntNullableFilter
  published: BoolFilter
  title: StringNullableFilter
}

input PostUpdateInput {
  author: UserUpdateOneWithoutPostsInput
  comments: CommentUpdateManyWithoutPostInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  interact: InteractUpdateOneWithoutPostInput
  published: BoolFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
}

input PostUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutInteractInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  create: [PostCreateWithoutAuthorInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateManyWithoutInteractInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutinteractInput!]
  create: [PostCreateWithoutInteractInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutInteractInput!]
  updateMany: [PostUpdateManyWithWhereWithoutInteractInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutInteractInput!]
}

input PostUpdateOneWithoutCommentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutcommentsInput
  create: PostCreateWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  update: PostUpdateWithoutCommentsInput
  upsert: PostUpsertWithoutCommentsInput
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  data: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutInteractInput {
  data: PostUpdateWithoutInteractInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithoutAuthorInput {
  comments: CommentUpdateManyWithoutPostInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  interact: InteractUpdateOneWithoutPostInput
  published: BoolFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
}

input PostUpdateWithoutCommentsInput {
  author: UserUpdateOneWithoutPostsInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  interact: InteractUpdateOneWithoutPostInput
  published: BoolFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
}

input PostUpdateWithoutInteractInput {
  author: UserUpdateOneWithoutPostsInput
  comments: CommentUpdateManyWithoutPostInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  update: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutInteractInput {
  create: PostCreateWithoutInteractInput!
  update: PostUpdateWithoutInteractInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithoutCommentsInput {
  create: PostCreateWithoutCommentsInput!
  update: PostUpdateWithoutCommentsInput!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  interact(where: InteractWhereUniqueInput!): Interact
  post(where: PostWhereUniqueInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [QueryPostsOrderByInput!]): [Post!]!
  postsQuery(cursor: Int): QueryResponse
  user(where: UserWhereUniqueInput!): User
}

input QueryPostsOrderByInput {
  id: SortOrder
}

type QueryResponse {
  edges: [Post]
  pageInfo: PageInfo
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  avatarUrl: String
  email: String
  id: Int
  name: String
  password: String
  posts: [Post]
  uuid: String
}

input UserCreateInput {
  Comment: CommentCreateManyWithoutUserInput
  avatarUrl: String
  circles: CircleCreateManyWithoutUserInput
  email: String!
  hatePostIds: String
  interestPostIds: String
  name: String
  password: String
  posts: PostCreateManyWithoutAuthorInput
  uuid: String!
  valuePostIds: String
}

input UserCreateOneWithoutCommentInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCommentInput
  create: UserCreateWithoutCommentInput
}

input UserCreateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  create: UserCreateWithoutPostsInput
}

input UserCreateOrConnectWithoutCommentInput {
  create: UserCreateWithoutCommentInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutpostsInput {
  create: UserCreateWithoutPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutCommentInput {
  avatarUrl: String
  circles: CircleCreateManyWithoutUserInput
  email: String!
  hatePostIds: String
  interestPostIds: String
  name: String
  password: String
  posts: PostCreateManyWithoutAuthorInput
  uuid: String!
  valuePostIds: String
}

input UserCreateWithoutPostsInput {
  Comment: CommentCreateManyWithoutUserInput
  avatarUrl: String
  circles: CircleCreateManyWithoutUserInput
  email: String!
  hatePostIds: String
  interestPostIds: String
  name: String
  password: String
  uuid: String!
  valuePostIds: String
}

input UserUpdateInput {
  Comment: CommentUpdateManyWithoutUserInput
  avatarUrl: NullableStringFieldUpdateOperationsInput
  circles: CircleUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  hatePostIds: NullableStringFieldUpdateOperationsInput
  interestPostIds: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  uuid: StringFieldUpdateOperationsInput
  valuePostIds: NullableStringFieldUpdateOperationsInput
}

input UserUpdateOneWithoutCommentInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCommentInput
  create: UserCreateWithoutCommentInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutCommentInput
  upsert: UserUpsertWithoutCommentInput
}

input UserUpdateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  create: UserCreateWithoutPostsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutPostsInput
  upsert: UserUpsertWithoutPostsInput
}

input UserUpdateWithoutCommentInput {
  avatarUrl: NullableStringFieldUpdateOperationsInput
  circles: CircleUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  hatePostIds: NullableStringFieldUpdateOperationsInput
  interestPostIds: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  uuid: StringFieldUpdateOperationsInput
  valuePostIds: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutPostsInput {
  Comment: CommentUpdateManyWithoutUserInput
  avatarUrl: NullableStringFieldUpdateOperationsInput
  circles: CircleUpdateManyWithoutUserInput
  email: StringFieldUpdateOperationsInput
  hatePostIds: NullableStringFieldUpdateOperationsInput
  interestPostIds: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  valuePostIds: NullableStringFieldUpdateOperationsInput
}

input UserUpsertWithoutCommentInput {
  create: UserCreateWithoutCommentInput!
  update: UserUpdateWithoutCommentInput!
}

input UserUpsertWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  update: UserUpdateWithoutPostsInput!
}

input UserWhereUniqueInput {
  email: String
  id: Int
  uuid: String
}
